[{"path":"https://jdrengifoc.github.io/dataRC/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Juan David Rengifo-Castro. Maintainer, author, funder.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rengifo-Castro JD (2024). dataRC: Towards frictionless world. R package version 1.0.0, https://github.com/jdrengifoc/dataRC.","code":"@Manual{,   title = {dataRC: Towards a frictionless world},   author = {Juan David Rengifo-Castro},   year = {2024},   note = {R package version 1.0.0},   url = {https://github.com/jdrengifoc/dataRC}, }"},{"path":"https://jdrengifoc.github.io/dataRC/index.html","id":"datarc-","dir":"","previous_headings":"","what":"What the Package Does (Title Case)","title":"What the Package Does (Title Case)","text":"dataRC R package designed bring efficient data management technologies everyone. aims enhance efficiency data handling providing easy--use tools converting files Apache Parquet format, unifying heterogeneous databases, providing templates data processing . Whether little none programming experience advanced user, dataRC simplifies repetitive processes boosts productivity. Note: dataRC released basic form, several features currently inactive development. includes supplementary materials vignettes, website tutorials, added future updates. Additionally, process preparing package submission CRAN ensure broader accessibility stability users. Thank patience continue improve expand dataRC meet data management needs.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (Title Case)","text":"present, installation package supported GitHub. also like install vignettes (see Usage section details) use following command. However, already installed dependencies feel free delete dependencies = TRUE, skip updates asked Console.","code":"# install.packages(\"devtools\") devtools::install_github(\"jdrengifoc/dataRC\") # install.packages(\"devtools\") devtools::install_github(\"jdrengifoc/dataRC\", dependencies = TRUE, build_vignettes = TRUE)"},{"path":"https://jdrengifoc.github.io/dataRC/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"What the Package Does (Title Case)","text":"learn use dataRC’s features provide different kinds study material shown following table. documentation provides comprehensive information function. see load library use symbol ?. README lacks presentation since reading . can find simple usage example three dataRC’s functions! part, vignettes guides showcase full examples workflows. future, accessible website, currently, way view RStudio. installed vignettes properly (see Installation section), list names available vignettes vignette(package = 'dataRC'). identified name vignettes, lets say process_data_with_partial_dict, use following command visualize . vignette render help pane. Finally, explore complete project documentation, supplementary materials, additional resources website.","code":"library(dataRC) ?convert_files library(dataRC)  # Convert all the .dta, .txt, and .csv files in the current folder into Parquet # format and store them in the folder ./parquet_files. convert_files(   folder = \".\", files = list.files(pattern = '(dta|txt|csv)$'),   new_extension = \"parquet\", new_folder = '/parquet_files')  # Create a partial dictionary to ease data homogenization without making # unexpected changes to original data. dict_path <- 'dict.xlsx' create_partial_dictionary(   folder = '/parquet_files', files = list.files(), dict_path, verbose = F) #Add descriptive statistics and sort the partial dictionary for final manual review. sort_partial_dictionary(dict_path, overwrite = T) vignette('process_data_with_partial_dict', package = 'dataRC') #> Warning: vignette 'process_data_with_partial_dict' not found"},{"path":"https://jdrengifoc.github.io/dataRC/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"What the Package Does (Title Case)","text":"encounter clear bug, please file issue minimal reproducible example GitHub. don’t know suggestion, please feel free write email jdrengifoc@eafit.edu.co. Please include word dataRC subject.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/convert_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify multiple files to a specified format — convert_files","title":"Modify multiple files to a specified format — convert_files","text":"Converts group files located folder new format. iterates provided vector files creates copy file specified format (extension). user can set location new files, shared across files.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/convert_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify multiple files to a specified format — convert_files","text":"","code":"convert_files(   folder,   files,   new_extension = \"parquet\",   new_folder = NULL,   verbose = TRUE )"},{"path":"https://jdrengifoc.github.io/dataRC/reference/convert_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify multiple files to a specified format — convert_files","text":"folder path folder containing original files. files character vector file paths copy. paths must satisfy following properties: path must start folder path. file extensions supported read_fun(). new_extension string format must copies original files. Must extension supported write_fun(). new_folder path folder converted files saved (folder exist created). provided, new folder created inside original folder name. verbose Logical (default TRUE) indicating whether display progress messages.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/convert_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify multiple files to a specified format — convert_files","text":"None.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/convert_files.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modify multiple files to a specified format — convert_files","text":"function robust uppercase dots new extension. new_folder argument provided, new folder created inside original folder name. needed, sub folders created inside new folder mirror structure original folder.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/convert_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify multiple files to a specified format — convert_files","text":"","code":"if (FALSE) { # Convert files in the current directory to Parquet format convert_files(folder = \".\", files = list.files(), new_extension = \"parquet\") }"},{"path":"https://jdrengifoc.github.io/dataRC/reference/create_partial_dictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"Write an Excel file containing the names and classes of each file — create_partial_dictionary","title":"Write an Excel file containing the names and classes of each file — create_partial_dictionary","text":"first step create \"raw partial dictionary\" ease unification databases common information may heterogeneity across files. instance, databases different number variables, name data type may change across files.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/create_partial_dictionary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write an Excel file containing the names and classes of each file — create_partial_dictionary","text":"","code":"create_partial_dictionary(   folder,   files,   dict_path,   n_infer = 100L,   overwrite = F,   verbose = T )"},{"path":"https://jdrengifoc.github.io/dataRC/reference/create_partial_dictionary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write an Excel file containing the names and classes of each file — create_partial_dictionary","text":"folder character root folder stored data. files character vector file paths (folder) extract column names classes. dict_path path going saved dictionary. n_infer number rows infer column classes file (default 100). overwrite boolean indicating whether overwrite dictionary already exists. default FALSE protect existing dictionaries. verbose boolean (default TRUE) indicating whether display progress messages.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/create_partial_dictionary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write an Excel file containing the names and classes of each file — create_partial_dictionary","text":"None. function saves raw partial dictionary Excel file.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/create_partial_dictionary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write an Excel file containing the names and classes of each file — create_partial_dictionary","text":"function extracts column names classes (data types) file, stores dictionary saved Excel file two sheets (one names classes). raw dictionary lacks polish almost useless form, highly recommended refine . function sort_partial_dictionary() accomplished job. , merge functions first place? Well, least two reasons. First, creation preliminary partial dictionary potentially time demanding, splitting process guarantee error refinement affect heavy work. Second, allows user elaborate custom processing.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/create_partial_dictionary.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Write an Excel file containing the names and classes of each file — create_partial_dictionary","text":"n_infer critical parameter comes trade speed certainty class properly inferred. data small hurry, replace Inf. However, even small value 100 experience problem hundreds files millions observations tens variables. important data files common folder (root folder). course may partitioned sub-folders.","code":""},{"path":[]},{"path":"https://jdrengifoc.github.io/dataRC/reference/create_partial_dictionary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write an Excel file containing the names and classes of each file — create_partial_dictionary","text":"","code":"if (FALSE) { # Create a partial dictionary from a list of files. folder <- 'my_folder/my_data' files <- list.files(folder, recursive = T) create_partial_dictionary(folder, files, \"my_folder/my_dictionary.xlsx\") }"},{"path":"https://jdrengifoc.github.io/dataRC/reference/crosstab.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross Tabulation — crosstab","title":"Cross Tabulation — crosstab","text":"Performs cross-tabulation two variables dataframe.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/crosstab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross Tabulation — crosstab","text":"","code":"crosstab(df, var1, var2)"},{"path":"https://jdrengifoc.github.io/dataRC/reference/crosstab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross Tabulation — crosstab","text":"df dataframe. var1 character name first variable . var2 character name  second variable.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/crosstab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross Tabulation — crosstab","text":"cross-tabulation table following properties: first column name var1 values var1 df. columns names values var2 df. cell (, j) absolute frequency combination values.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/crosstab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross Tabulation — crosstab","text":"","code":"crosstab(mtcars, \"gear\", \"carb\") #> # A tibble: 6 × 4 #>    carb   `3`   `4`   `5` #>   <dbl> <int> <int> <int> #> 1     1     3     4    NA #> 2     2     4     4     2 #> 3     3     3    NA    NA #> 4     4     5     4     1 #> 5     6    NA    NA     1 #> 6     8    NA    NA     1"},{"path":"https://jdrengifoc.github.io/dataRC/reference/delete_files_from_excel.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete files specified in an Excel file — delete_files_from_excel","title":"Delete files specified in an Excel file — delete_files_from_excel","text":"Based Excel file, function deletes files oriented user.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/delete_files_from_excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete files specified in an Excel file — delete_files_from_excel","text":"","code":"delete_files_from_excel(file_path, save = 0, verbose = T)"},{"path":"https://jdrengifoc.github.io/dataRC/reference/delete_files_from_excel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete files specified in an Excel file — delete_files_from_excel","text":"file_path path Excel file containing file details. save value delete column avoid deletion file. default value 0. verbose boolean. TRUE (default), displays message summarizing deletion process.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/delete_files_from_excel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete files specified in an Excel file — delete_files_from_excel","text":"None.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/delete_files_from_excel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delete files specified in an Excel file — delete_files_from_excel","text":"highly recommended use folder_details(), generates Excel file detailed information file folder. , user must manually modify \"delete\" column way, files expected deleted must value different save value (default 0).","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/delete_files_from_excel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete files specified in an Excel file — delete_files_from_excel","text":"","code":"if (FALSE) { delete_files_from_excel(\"details.xlsx\") }"},{"path":"https://jdrengifoc.github.io/dataRC/reference/delete_stata_temps.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete Stata temporary files — delete_stata_temps","title":"Delete Stata temporary files — delete_stata_temps","text":"function identifies Stata temporary files based naming convention. deletes identified files prints number files deleted along cleared disk space.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/delete_stata_temps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete Stata temporary files — delete_stata_temps","text":"","code":"delete_stata_temps(temp_dir = NULL)"},{"path":"https://jdrengifoc.github.io/dataRC/reference/delete_stata_temps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete Stata temporary files — delete_stata_temps","text":"temp_dir Optional. directory search Stata temporary files. NULL (default value), function attempt find Stata temporary directory aid find_stata_tempdir().","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/delete_stata_temps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete Stata temporary files — delete_stata_temps","text":"None.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/delete_stata_temps.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Delete Stata temporary files — delete_stata_temps","text":"WARNING! run using Stata, may delete temporary file currently employed.","code":""},{"path":[]},{"path":"https://jdrengifoc.github.io/dataRC/reference/delete_stata_temps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete Stata temporary files — delete_stata_temps","text":"","code":"if (FALSE) { delete_stata_temps() # You can specify the directory where Stata stores the temporary files # explicitly. delete_stata_temps(\"/path/to/tempdir\") }"},{"path":"https://jdrengifoc.github.io/dataRC/reference/file_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the size of each file — file_size","title":"Get the size of each file — file_size","text":"function takes vector file paths returns data frame file name size file. File sizes can reported different units (bytes, kilobytes, megabytes, gigabytes). file size NA , file exists.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/file_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the size of each file — file_size","text":"","code":"file_size(files, units = \"bytes\")"},{"path":"https://jdrengifoc.github.io/dataRC/reference/file_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the size of each file — file_size","text":"files vector file paths. units desired file size unit: 'bytes' (default), 'kb', 'mb', 'gb'.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/file_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the size of each file — file_size","text":"data frame following properties: many rows files. two columns: filename (identical files) size (desired units).","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/file_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the size of each file — file_size","text":"","code":"if (FALSE) { file_size(c(\"file1.txt\", \"file2.txt\"), units = 'kb') }"},{"path":"https://jdrengifoc.github.io/dataRC/reference/files_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the total size of multiple files. — files_size","title":"Get the total size of multiple files. — files_size","text":"function takes vector file paths returns total size files combined. File sizes can reported different units (bytes, kilobytes, megabytes, gigabytes).","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/files_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the total size of multiple files. — files_size","text":"","code":"files_size(files, units = \"bytes\")"},{"path":"https://jdrengifoc.github.io/dataRC/reference/files_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the total size of multiple files. — files_size","text":"files vector file paths. units desired file size unit: 'bytes' (default), 'kb', 'mb', 'gb'.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/files_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the total size of multiple files. — files_size","text":"total size files combined.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/files_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the total size of multiple files. — files_size","text":"","code":"if (FALSE) { files_size(c(\"file1.txt\", \"file2.txt\"), units = 'mb') }"},{"path":"https://jdrengifoc.github.io/dataRC/reference/find_stata_tempdir.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Stata Temporary Directory — find_stata_tempdir","title":"Find Stata Temporary Directory — find_stata_tempdir","text":"function attempts find directory Stata stores temporary files. checks STATATMP environment variable first, since used modify predefined temporary files. STATATMP exists, falls back TEMP Windows TMPDIR Linux/Unix.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/find_stata_tempdir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Stata Temporary Directory — find_stata_tempdir","text":"","code":"find_stata_tempdir()"},{"path":"https://jdrengifoc.github.io/dataRC/reference/find_stata_tempdir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Stata Temporary Directory — find_stata_tempdir","text":"string representing path Stata temporary directory.","code":""},{"path":[]},{"path":"https://jdrengifoc.github.io/dataRC/reference/find_stata_tempdir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Stata Temporary Directory — find_stata_tempdir","text":"","code":"if (FALSE) { find_stata_tempdir() }"},{"path":"https://jdrengifoc.github.io/dataRC/reference/folder_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Create table with information of all the files in specified folders — folder_details","title":"Create table with information of all the files in specified folders — folder_details","text":"function takes vector folder paths, retrieves details files folders. writes information Excel file. details include file names, last update timestamps, file sizes proportional sizes folder stored, add column potential deletion.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/folder_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create table with information of all the files in specified folders — folder_details","text":"","code":"folder_details(folders, file_path = NULL, units = \"bytes\", verbose = TRUE)"},{"path":"https://jdrengifoc.github.io/dataRC/reference/folder_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create table with information of all the files in specified folders — folder_details","text":"folders vector folder paths. file_path path Excel file saved. units desired units file sizes 'bytes' (default), 'kb', 'mb', 'gb'. verbose boolean. TRUE (default), displays message confirming successful completion process.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/folder_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create table with information of all the files in specified folders — folder_details","text":"None.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/folder_details.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create table with information of all the files in specified folders — folder_details","text":"Simplifies folder cleaning generating Excel file containing details file. creation, user required modify delete zeros delete column files deleted. Finally, call delete_files_from_excel().","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/folder_details.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create table with information of all the files in specified folders — folder_details","text":"","code":"if (FALSE) { folder_details(c(\"/path/to/folder1\", \"/path/to/folder2\"),                 file_path = \"details.xlsx\", units = 'kb') }"},{"path":"https://jdrengifoc.github.io/dataRC/reference/get_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the mode of a vector — get_mode","title":"Calculate the mode of a vector — get_mode","text":"function calculates mode vector, value appears frequently. ties, function returns tied values encountered order.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/get_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the mode of a vector — get_mode","text":"","code":"get_mode(values, na.rm = T)"},{"path":"https://jdrengifoc.github.io/dataRC/reference/get_mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the mode of a vector — get_mode","text":"values atomic vector find mode. na.rm Logical (default TRUE) determine whether missing values removed.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/get_mode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the mode of a vector — get_mode","text":"atomic vector mode (modes) values.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/get_mode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the mode of a vector — get_mode","text":"","code":"# Calculate mode of a numeric vector get_mode(c(1, 2, 2, 3, 3, 3)) #> [1] 3 # Output: 3.  # Calculate mode of a character vector get_mode(c(\"apple\", \"banana\", \"banana\", \"orange\")) #> [1] \"banana\" # Output: \"banana\".  # Calculate mode of a vector with ties. get_mode(c(TRUE, FALSE)) #> [1]  TRUE FALSE # Output: TRUE, FALSE get_mode(c(FALSE, TRUE)) #> [1] FALSE  TRUE # Output: FALSE, TRUE.  # Calculate mode of a vector with NAs get_mode(c(TRUE, FALSE, NA, NA)) #> [1]  TRUE FALSE # Output: TRUE, FALSE get_mode(c(TRUE, FALSE, NA, NA), na.rm = FALSE) #> [1] NA # Output: NA."},{"path":"https://jdrengifoc.github.io/dataRC/reference/get_next_consecutives.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Consecutive Numbers in a Vector — get_next_consecutives","title":"Find Consecutive Numbers in a Vector — get_next_consecutives","text":"Given two vectors integers, function finds consecutive number second vector (post) element first vector (prev).","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/get_next_consecutives.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Consecutive Numbers in a Vector — get_next_consecutives","text":"","code":"get_next_consecutives(prev, post)"},{"path":"https://jdrengifoc.github.io/dataRC/reference/get_next_consecutives.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Consecutive Numbers in a Vector — get_next_consecutives","text":"prev vector positive integers representing previous numbers. post vector positive integers representing subsequent numbers.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/get_next_consecutives.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Consecutive Numbers in a Vector — get_next_consecutives","text":"numeric atomic vector length min(prev, post).","code":""},{"path":[]},{"path":"https://jdrengifoc.github.io/dataRC/reference/get_values_tic_msg.html","id":null,"dir":"Reference","previous_headings":"","what":"Measures elapsed time in a desired unit — get_values_tic_msg","title":"Measures elapsed time in a desired unit — get_values_tic_msg","text":"Used tictoc::tic(), overrides tictoc::toc() returning numeric elapsed time since last tictoc::tic() call, specified unit.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/get_values_tic_msg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Measures elapsed time in a desired unit — get_values_tic_msg","text":"","code":"get_values_tic_msg(unit = \"sec\")"},{"path":"https://jdrengifoc.github.io/dataRC/reference/get_values_tic_msg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Measures elapsed time in a desired unit — get_values_tic_msg","text":"unit string specifying unit time returned value (default 'sec'). Possible values: 'sec' (seconds), 'min' (minutes) 'hour' (hours).","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/get_values_tic_msg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Measures elapsed time in a desired unit — get_values_tic_msg","text":"numeric value representing elapsed time specified unit.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/get_values_tic_msg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Measures elapsed time in a desired unit — get_values_tic_msg","text":"","code":"# Extract elapsed time in seconds get_values_tic_msg(unit = 'sec') #> numeric(0)  # Extract elapsed time in minutes get_values_tic_msg(unit = 'min') #> numeric(0)  # Extract elapsed time in hours get_values_tic_msg(unit = 'hour') #> numeric(0)"},{"path":"https://jdrengifoc.github.io/dataRC/reference/is_subset_bidirectional.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Strings are subsets of each other. — is_subset_bidirectional","title":"Check if Strings are subsets of each other. — is_subset_bidirectional","text":"pair strings input vectors str1 str2, checks one string subset another directions.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/is_subset_bidirectional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Strings are subsets of each other. — is_subset_bidirectional","text":"","code":"is_subset_bidirectional(str1, str2)"},{"path":"https://jdrengifoc.github.io/dataRC/reference/is_subset_bidirectional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if Strings are subsets of each other. — is_subset_bidirectional","text":"str1, str2 pair character vectors length, length 1. latter applies, values vector compared unique value shorter one.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/is_subset_bidirectional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if Strings are subsets of each other. — is_subset_bidirectional","text":"logical vector indicating whether corresponding pair strings satisfies subset condition.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/is_subset_bidirectional.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if Strings are subsets of each other. — is_subset_bidirectional","text":"","code":"is_subset_bidirectional(\"hello\", \"hi\")  # FALSE #> [1] FALSE is_subset_bidirectional(c(\"hello\", \"world\"), c(\"hello world\", \"world hello\"))  # TRUE TRUE #> [1] TRUE TRUE is_subset_bidirectional(\"hello\", c(\"hello\", \"world\"))  # TRUE FALSE #> [1]  TRUE FALSE is_subset_bidirectional(c(\"hello\", \"world\"), \"hello world\")  # TRUE TRUE #> [1] TRUE TRUE"},{"path":"https://jdrengifoc.github.io/dataRC/reference/is_substring.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a String is a Substring — is_substring","title":"Check if a String is a Substring — is_substring","text":"function checks string substring another.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/is_substring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a String is a Substring — is_substring","text":"","code":"is_substring(str1, str2)"},{"path":"https://jdrengifoc.github.io/dataRC/reference/is_substring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a String is a Substring — is_substring","text":"str1 first string. str2 second string.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/is_substring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a String is a Substring — is_substring","text":"TRUE str1 substring str2, otherwise returns FALSE.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/is_substring.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if a String is a Substring — is_substring","text":"Unlike grepl() stringr::str_detect(), robust invalid regular expressions. instance, stringr::str_detect(\"abcd\\[\", \"abcd\\[ef\") stringr::str_detect(\"abcd]\", \"abcd]ef\") failed identify substrings.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/is_substring.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a String is a Substring — is_substring","text":"","code":"is_substring(\"abc\", \"abcdef\") # TRUE #> [1] TRUE is_substring(\"xyz\", \"abcdef\") # FALSE #> [1] FALSE is_substring(\"abcd]\", \"abcd]ef\") # TRUE #> [1] TRUE is_substring(\"abcd[\", \"abcd[ef\") # TRUE #> [1] TRUE"},{"path":"https://jdrengifoc.github.io/dataRC/reference/n_digits_int.html","id":null,"dir":"Reference","previous_headings":"","what":"Count the number of digits in an integer — n_digits_int","title":"Count the number of digits in an integer — n_digits_int","text":"Counts number digits integer.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/n_digits_int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count the number of digits in an integer — n_digits_int","text":"","code":"n_digits_int(x)"},{"path":"https://jdrengifoc.github.io/dataRC/reference/n_digits_int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count the number of digits in an integer — n_digits_int","text":"x Numeric vector.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/n_digits_int.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count the number of digits in an integer — n_digits_int","text":"Number digits element x.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/n_digits_int.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Count the number of digits in an integer — n_digits_int","text":"x positive integer, faster use n_digits_natural().","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/n_digits_int.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count the number of digits in an integer — n_digits_int","text":"","code":"n_digits_int(-12345) #> [1] 5 n_digits_int(0) #> [1] 1"},{"path":"https://jdrengifoc.github.io/dataRC/reference/n_digits_natural.html","id":null,"dir":"Reference","previous_headings":"","what":"Count number of digits in a natural number — n_digits_natural","title":"Count number of digits in a natural number — n_digits_natural","text":"Counts number digits natural number (includes zero).","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/n_digits_natural.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count number of digits in a natural number — n_digits_natural","text":"","code":"n_digits_natural(x)"},{"path":"https://jdrengifoc.github.io/dataRC/reference/n_digits_natural.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count number of digits in a natural number — n_digits_natural","text":"x Numeric vector.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/n_digits_natural.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count number of digits in a natural number — n_digits_natural","text":"Number digits element x.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/n_digits_natural.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count number of digits in a natural number — n_digits_natural","text":"","code":"n_digits_natural(12345) #> [1] 5"},{"path":"https://jdrengifoc.github.io/dataRC/reference/pad_with_nas.html","id":null,"dir":"Reference","previous_headings":"","what":"Append NA values to a vector to reach a target length — pad_with_nas","title":"Append NA values to a vector to reach a target length — pad_with_nas","text":"function pads vector tail NA values, achieve specified length target.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/pad_with_nas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append NA values to a vector to reach a target length — pad_with_nas","text":"","code":"pad_with_nas(vec, target_length)"},{"path":"https://jdrengifoc.github.io/dataRC/reference/pad_with_nas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append NA values to a vector to reach a target length — pad_with_nas","text":"vec input vector padded. target_length desired length padded vector.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/pad_with_nas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append NA values to a vector to reach a target length — pad_with_nas","text":"vector length target_length first length(vec) elements identical vec. remain tail elements NA.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/pad_with_nas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Append NA values to a vector to reach a target length — pad_with_nas","text":"","code":"# Pad a vector with NA values to reach a target length of 10 pad_with_nas(c(1, 2, 3), 10) #>  [1]  1  2  3 NA NA NA NA NA NA NA"},{"path":"https://jdrengifoc.github.io/dataRC/reference/partition_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Partition a parquet file into multiple parquet files of a maximum size. — partition_data","title":"Partition a parquet file into multiple parquet files of a maximum size. — partition_data","text":"function partitions parquet file multiple partitions based specified maximum partition size.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/partition_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Partition a parquet file into multiple parquet files of a maximum size. — partition_data","text":"","code":"partition_data(   original_file,   partition_folder,   max_partition_size = 25,   units = \"mb\" )"},{"path":"https://jdrengifoc.github.io/dataRC/reference/partition_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Partition a parquet file into multiple parquet files of a maximum size. — partition_data","text":"original_file Path original parquet file. partition_folder Path folder partitions must stored. max_partition_size Maximum size partition (default 25). units Units storage supported files_size() (default 'mb').","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/partition_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Partition a parquet file into multiple parquet files of a maximum size. — partition_data","text":"None. Writes partitions partition_folder.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/partition_data.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Partition a parquet file into multiple parquet files of a maximum size. — partition_data","text":"urge enhance performance, size partition forecast assuming homogeneous storage demand along original file. However may unrealistic, thus, max_partition_size guarantee partition largest size size. specially true small files/partitions, since memory gains due use parquet becomes weaker.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/partition_data.html","id":"why-only-partion-parquet-files-","dir":"Reference","previous_headings":"","what":"Why only partion parquet files?","title":"Partition a parquet file into multiple parquet files of a maximum size. — partition_data","text":"function intended share files via communication tool limits size per message (e.g. mail). , partition data recommended convert file efficient format.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/partition_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Partition a parquet file into multiple parquet files of a maximum size. — partition_data","text":"","code":"if (FALSE) { partition_data(\"data/original_data.csv\", \"partitions/\",                max_partition_size = 25, units = 'mb') }"},{"path":"https://jdrengifoc.github.io/dataRC/reference/read_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper function for reading data functions — read_fun","title":"Wrapper function for reading data functions — read_fun","text":"function receives file extension returns proper reading function popular R packages : arrow, haven, readxl utils.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/read_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper function for reading data functions — read_fun","text":"","code":"read_fun(extension, ...)"},{"path":"https://jdrengifoc.github.io/dataRC/reference/read_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper function for reading data functions — read_fun","text":"extension string specifying file extension must support returned function. Supported extensions: 'parquet', 'feather', 'dta', 'xlsx', 'csv', 'sas', 'rds' 'rdata'. parameter case robust. ... Additional arguments passed reading functions encapsulated read_fun().","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/read_fun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper function for reading data functions — read_fun","text":"function can read data specified file format. returned function accept file path first argument.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/read_fun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper function for reading data functions — read_fun","text":"","code":"if (FALSE) { # Read Parquet file reader <- read_fun(\"parquet\") data <- reader(\"file.parquet\")  # Read Excel file reader <- read_fun(\"xlsx\") data <- reader(\"file.xlsx\")  # Read Parquet file reader <- read_fun(\"parquet\") data <- reader(\"file.parquet\")  # Read Excel file reader <- read_fun(\"xlsx\") data <- reader(\"file.xlsx\")  # Read CSV file with comma separator reader <- read_fun(\"csv\", sep = ',') data <- reader(\"file.csv\")  # Read TXT file with tab separator and specifying additional arguments reader <- read_fun(\"txt\", sep = '\\t', skip = 1, header = FALSE) data <- reader(\"file.txt\") }"},{"path":"https://jdrengifoc.github.io/dataRC/reference/share_all_elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if two vectors have the same elements. — share_all_elements","title":"Check if two vectors have the same elements. — share_all_elements","text":"Determines whether two vectors share elements .","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/share_all_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if two vectors have the same elements. — share_all_elements","text":"","code":"share_all_elements(atom1, atom2)"},{"path":"https://jdrengifoc.github.io/dataRC/reference/share_all_elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if two vectors have the same elements. — share_all_elements","text":"atom1 First atom. atom2 Second atom.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/share_all_elements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if two vectors have the same elements. — share_all_elements","text":"returns TRUE elements atom1 present atom2 elements atom2 present atom1, otherwise returns FALSE.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/share_all_elements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if two vectors have the same elements. — share_all_elements","text":"","code":"share_all_elements(1:3, c(1, 1, 1, 3, 2, 1, 3)) #> [1] TRUE"},{"path":"https://jdrengifoc.github.io/dataRC/reference/sort_partial_dictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"Refine the ","title":"Refine the ","text":"function refine raw partial dictionary created create_partial_dictionary(). reads raw dictionary file, sorts column names frequency (across files) alphabetically, creates columns descriptive statistics variable. sorted (refined) dictionary saved xlsx file.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/sort_partial_dictionary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Refine the ","text":"","code":"sort_partial_dictionary(old_dict_path, new_dict_path = NULL, overwrite = F)"},{"path":"https://jdrengifoc.github.io/dataRC/reference/sort_partial_dictionary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Refine the ","text":"old_dict_path Path raw dictionary file. new_dict_path Path save sorted (refined) dictionary NULL, original file old_dict_path (default NULL). overwrite Logical indicating whether overwrite existing dictionary file new_dict_path already exists. default value FALSE avoid undesired changes.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/sort_partial_dictionary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Refine the ","text":"None. function saves sorted dictionary file specified location. dictionary following columns: uniname: Suggested unifying name variable. groups across files identical case robust variable names. uniclass: Empty column intended filled manually user unifying class variable. Theoretically, filled value, however, based template vignette('vignettes/process_data_with_partial_dict.Rmd') recommended use 'integer', 'numeric', 'character', 'date' 'logical'. coverage: percentage files match uniname. class_mode: class mode per uniname computed get_mode(). unique_classes: classes per uniname.","code":""},{"path":[]},{"path":"https://jdrengifoc.github.io/dataRC/reference/sort_partial_dictionary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Refine the ","text":"","code":"if (FALSE) { # Sort a partial dictionary file sort_partial_dictionary(old_dict_path = \"original_dictionary.xlsx\",                           overwrite = TRUE) }"},{"path":"https://jdrengifoc.github.io/dataRC/reference/stata_month2ymd.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Stata month to date — stata_month2ymd","title":"Convert Stata month to date — stata_month2ymd","text":"Convert numeric Stata months date format.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/stata_month2ymd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Stata month to date — stata_month2ymd","text":"","code":"stata_month2ymd(stata_month)"},{"path":"https://jdrengifoc.github.io/dataRC/reference/stata_month2ymd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Stata month to date — stata_month2ymd","text":"stata_month Numeric vector representing Stata month format.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/stata_month2ymd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Stata month to date — stata_month2ymd","text":"vector year-months lubridate::ym() format.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/stata_month2ymd.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convert Stata month to date — stata_month2ymd","text":"Stata counts months since January 1960.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/stata_month2ymd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Stata month to date — stata_month2ymd","text":"","code":"stata_month2ymd(19502) #> [1] \"3585-03-01\" stata_month2ymd(c(19502, 19503)) #> [1] \"3585-03-01\" \"3585-04-01\""},{"path":"https://jdrengifoc.github.io/dataRC/reference/unpartition_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Join partitions into a single file — unpartition_data","title":"Join partitions into a single file — unpartition_data","text":"function bind partitions created partition_data() single file desired extension type.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/unpartition_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join partitions into a single file — unpartition_data","text":"","code":"unpartition_data(partition_folder, new_file)"},{"path":"https://jdrengifoc.github.io/dataRC/reference/unpartition_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join partitions into a single file — unpartition_data","text":"partition_folder Path folder containing partition files. new_file Path new combined file.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/unpartition_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join partitions into a single file — unpartition_data","text":"None. Writes merged file new_file.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/unpartition_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Join partitions into a single file — unpartition_data","text":"","code":"if (FALSE) { unpartition_data(\"partitions/\", \"combined_data.parquet\") }"},{"path":"https://jdrengifoc.github.io/dataRC/reference/write_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper function for writing data functions — write_fun","title":"Wrapper function for writing data functions — write_fun","text":"function receives file extension returns proper writing function.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/write_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper function for writing data functions — write_fun","text":"","code":"write_fun(extension, ...)"},{"path":"https://jdrengifoc.github.io/dataRC/reference/write_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper function for writing data functions — write_fun","text":"extension string specifying file extension must support returned function. Supported extensions: 'parquet', 'feather', 'dta', 'xlsx', 'csv', 'sas', 'rds' 'rdata'. parameter case robust. ... Additional arguments passed writing functions (write.csv, write.table, etc.).","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/write_fun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper function for writing data functions — write_fun","text":"function can write data specified file format. returned function accept data object file path arguments.","code":""},{"path":"https://jdrengifoc.github.io/dataRC/reference/write_fun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper function for writing data functions — write_fun","text":"","code":"if (FALSE) { # Write data to Parquet file writer <- write_fun(\"parquet\") writer(data, \"file.parquet\")  # Write data to CSV file with comma separator writer <- write_fun(\"csv\", sep = ',') writer(data, \"file.csv\")  # Write data to TXT file with tab separator and specifying additional arguments writer <- write_fun(\"txt\", sep = '\\t', col.names = FALSE) writer(data, \"file.txt\") }"}]
