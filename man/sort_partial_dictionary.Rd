% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/03_partial_dictionary.R
\name{sort_partial_dictionary}
\alias{sort_partial_dictionary}
\title{Organize partial dictionary and creates useful columns}
\usage{
sort_partial_dictionary(old_dict_path, new_dict_path = NULL, overwrite = F)
}
\arguments{
\item{old_dict_path}{Path to the original dictionary file.}

\item{new_dict_path}{Path to save the sorted dictionary file. If NULL, the
original file will be `old_dict_path` (default is NULL).}

\item{overwrite}{Logical indicating whether to overwrite the existing
dictionary file if `new_dict_path` already exists. Its default value is
FALSE to avoid undesired changes.}
}
\value{
None. The function saves the sorted dictionary file to the specified
  location.
}
\description{
This function sorts a partial dictionary  used for identifying and unifying
the data column names and classes across files. It reads the original
dictionary file, sorts the column names alphabetically, and creates a new
dictionary with the sorted column names and corresponding classes. The sorted
dictionary is saved into a xlsx file.
}
\details{
The dictionary will have unique name (`uniname`) across files, the
  most common classes and the unique classes per `uniname`. After this, the
  user manually must fill the `uniclass` column in order to guarantee a
  robust data process (see
  `vignette('vignettes/process_data_with_partial_dict.Rmd')` for a full
  example).
}
\examples{
\dontrun{
# Sort a partial dictionary file
sort_partial_dictionary(old_dict_path = "original_dictionary.xlsx",
                          overwrite = TRUE)
}

}
